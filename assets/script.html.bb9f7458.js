import{_ as i}from"./console.c788304f.js";import{_ as l}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as u,c as r,a as n,d as s,b as a,e as o,r as p}from"./app.e6482b3c.js";const d="/fast-request/img/2022.2.3/scriptDonate.png",k={},h=n("p",null,[n("strong",null,"脚本的作用"),s(": 开发者可以利用 Groovy 脚本来自定义一些逻辑,从而使得 api 更加灵活,例如对参数进行动态加密签名,放入 header,而不是直接写死")],-1),g=n("strong",null,"实现技术",-1),m={href:"https://groovy-lang.org/",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,[s("看到 Groovy 不熟悉请"),n("mark",null,"不要慌"),s(",语法和 Java 几乎一致(Java 就是香,手动一个狗头)")],-1),_=n("h2",{id:"脚本流程图",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#脚本流程图","aria-hidden":"true"},"#"),s(" 脚本流程图")],-1),b=n("h2",{id:"测试项目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#测试项目","aria-hidden":"true"},"#"),s(" 测试项目")],-1),f={href:"https://github.com/kings1990/fast-request-samples",target:"_blank",rel:"noopener noreferrer"},y=o(`<h2 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h2><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 往 header 塞入 md5 签名</label></li></ul><div class="language-groovy" data-ext="groovy"><pre class="language-groovy"><code><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span>CharsetUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span>StrUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>digest<span class="token punctuation">.</span>DigestUtil

String body <span class="token operator">=</span> StrUtil<span class="token punctuation">.</span><span class="token function">str</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">bodyBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> CharsetUtil<span class="token punctuation">.</span>CHARSET_UTF_8<span class="token punctuation">)</span>
body <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">&quot;xxx&quot;</span></span><span class="token comment">//just for test</span>
String sign <span class="token operator">=</span> DigestUtil<span class="token punctuation">.</span><span class="token function">md5Hex</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span>
request<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;sign&quot;</span></span><span class="token punctuation">,</span>sign<span class="token punctuation">)</span>
</code></pre></div><h2 id="内置变量" tabindex="-1"><a class="header-anchor" href="#内置变量" aria-hidden="true">#</a> 内置变量</h2><div class="custom-container danger"><p class="custom-container-title">注意</p><p>开发者在自己编辑的脚本中,应该注意内置变量已被声明,而不是再去 new 一个 Request 或者 Response 对象,对象名是 request 或者 response,否则可能会造成不可预期的错误</p></div>`,5),x={href:"https://hutool.cn/",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"cn.hutool.http.HttpRequest",-1),U={id:"request",tabindex:"-1"},w=n("a",{class:"header-anchor",href:"#request","aria-hidden":"true"},"#",-1),S=n("ul",null,[n("li",null,"作用: 包含了请求相关的信息,例如 url、header、body、各种参数"),n("li",null,"类型: cn.hutool.http.HttpRequest")],-1),j=n("p",null,"可以通过修改 request 值来动态调整参数",-1),H={id:"response",tabindex:"-1"},R=n("a",{class:"header-anchor",href:"#response","aria-hidden":"true"},"#",-1),C=n("ul",null,[n("li",null,"作用: 包含了请求响应的信息"),n("li",null,"类型: cn.hutool.http.HttpResponse")],-1),N=n("p",null,"可以通过 response 值来获取响应的结果",-1),B={id:"rfr",tabindex:"-1"},D=n("a",{class:"header-anchor",href:"#rfr","aria-hidden":"true"},"#",-1),J=n("ul",null,[n("li",null,"作用: 包含了跟插件交互相关的一些属性,用于后期定制")],-1),L={id:"rfr-projectheader",tabindex:"-1"},G=n("a",{class:"header-anchor",href:"#rfr-projectheader","aria-hidden":"true"},"#",-1),E=n("div",{class:"language-text","data-ext":"text"},[n("pre",{class:"language-text"},[n("code",null,`作用:包含了项目级别头,可以通过修改来动态往UI里面设置值
类型:java.util.LinkedHashMap
`)])],-1),Q={id:"rfr-moduleheader",tabindex:"-1"},z=n("a",{class:"header-anchor",href:"#rfr-moduleheader","aria-hidden":"true"},"#",-1),T=n("div",{class:"language-text","data-ext":"text"},[n("pre",{class:"language-text"},[n("code",null,`作用:包含了模块级别头,可以通过修改来动态往UI里面设置值
类型:java.util.LinkedHashMap
`)])],-1),V={id:"rfr-currentprojectname",tabindex:"-1"},I=n("a",{class:"header-anchor",href:"#rfr-currentprojectname","aria-hidden":"true"},"#",-1),O=n("div",{class:"language-text","data-ext":"text"},[n("pre",{class:"language-text"},[n("code",null,`作用:当前下拉框选择的项目名
类型:java.lang.String
`)])],-1),F={id:"rfr-currentenvname",tabindex:"-1"},M=n("a",{class:"header-anchor",href:"#rfr-currentenvname","aria-hidden":"true"},"#",-1),P=o(`<div class="language-text" data-ext="text"><pre class="language-text"><code>作用:当前下拉框选择的环境名称
类型:java.lang.String
</code></pre></div><h2 id="引入第三方-jar" tabindex="-1"><a class="header-anchor" href="#引入第三方-jar" aria-hidden="true">#</a> 引入第三方 Jar</h2><div class="custom-container tip"><p class="custom-container-title">内置的 Jar</p><div class="language-text" data-ext="text"><pre class="language-text"><code>com.alibaba:fastjson:1.2.78
cn.hutool:hutool-all:5.8.5
com.google.guava:guava:30.1.1-jre
</code></pre></div><p>Jar 的版本会不定期更新,如果发现 bug 请联系作者要求作者升级</p><p>开发者可以利用以上 3 个 Jar 所提供的工具方法,直接在脚本中引用,不需要再依赖第三方的 Jar(hutool 就是香,已经加入许多工具类)</p></div><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 引入 jar(maven 形式)</label></li></ul><p>下载 jar 可能会需要花费额外的时间</p><div class="language-groovy" data-ext="groovy"><pre class="language-groovy"><code><span class="token annotation punctuation">@Grab</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;org.apache.commons:commons-lang3:3.12.0&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils

String debug <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;debug&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>debug<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//some logic</span>
<span class="token punctuation">}</span>
</code></pre></div><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 引入 jar(通过本地 jar)</label></li></ul><div class="language-groovy" data-ext="groovy"><pre class="language-groovy"><code><span class="token comment">//注意此处的file:前缀</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span>classLoader<span class="token punctuation">.</span><span class="token function">addURL</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;file:/path/to/jar&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> StringUtils <span class="token operator">=</span> Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;org.apache.commons.lang3.StringUtils&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

String debug <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;debug&quot;</span></span><span class="token punctuation">)</span><span class="token comment">//获取header</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>debug<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//some logic</span>
<span class="token punctuation">}</span>
</code></pre></div>`,8),W={id:"console",tabindex:"-1"},A=n("a",{class:"header-anchor",href:"#console","aria-hidden":"true"},"#",-1),K=o(`<p>Console 帮助开发者打印一些你想要的信息</p><div class="language-java" data-ext="java"><pre class="language-java"><code>console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;print info&quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;warn&quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;success&quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span>

</code></pre></div><p><img src="`+i+'" alt="console" loading="lazy"></p><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo" aria-hidden="true">#</a> Demo</h2>',4),Y={class:"custom-container tip"},Z=n("p",{class:"custom-container-title"},"1. 签名参数",-1),X=n("p",null,"在你的本地新建一个 xxx.groovy 文件,粘贴以下代码,适当修改后,能保证本地可以正常运行,再把代码粘贴到脚本中",-1),$=o(`<p><s>HttpRequest request = HttpUtil.createPost(&quot;http://localhost:8081/book/add&quot;)</s></p><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span>CharsetUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span>StrUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>digest<span class="token punctuation">.</span>DigestUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpRequest
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpUtil

<span class="token comment">//注意、注意、注意,脚本中需要删除此行代码</span>
HttpRequest request <span class="token operator">=</span> HttpUtil<span class="token punctuation">.</span><span class="token function">createPost</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;http://localhost:8081/book/add&quot;</span></span><span class="token punctuation">)</span>

<span class="token comment">//脚本逻辑正式开始</span>
String body <span class="token operator">=</span> StrUtil<span class="token punctuation">.</span><span class="token function">str</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">bodyBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> CharsetUtil<span class="token punctuation">.</span>CHARSET_UTF_8<span class="token punctuation">)</span>
body <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">&quot;xxxx&quot;</span></span><span class="token comment">//just for test</span>
String sign <span class="token operator">=</span> DigestUtil<span class="token punctuation">.</span><span class="token function">md5Hex</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span>
request<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;sign&quot;</span></span><span class="token punctuation">,</span>sign<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),nn=o(`<div class="custom-container tip"><p class="custom-container-title">2. 利用某一个请求的响应充当请求的 Header 参数</p><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code><span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span>CharsetUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span>StrUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>digest<span class="token punctuation">.</span>DigestUtil
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpRequest
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpResponse
<span class="token keyword">import</span> cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpUtil
<span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span>JSON

HttpRequest myRequest <span class="token operator">=</span> HttpUtil<span class="token punctuation">.</span><span class="token function">createPost</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;http://localhost:8081/api/v1.0/login&quot;</span></span><span class="token punctuation">)</span>
HttpResponse myResponse <span class="token operator">=</span> myRequest<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>myResponse<span class="token punctuation">.</span><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    String token <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>myResponse<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;token&quot;</span></span><span class="token punctuation">)</span>
    request<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;token&quot;</span></span><span class="token punctuation">,</span>token<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="注意点" tabindex="-1"><a class="header-anchor" href="#注意点" aria-hidden="true">#</a> 注意点</h2><ul><li>Groovy 脚本对 <mark>;</mark> 不敏感,Java 用;作为语句代码的结束,Groovy 用换行表示一句代码的结束</li><li>内置变量已被申明,例如 Demo2 中需要额外新建一个请求,变量命名需要注意不能与内置变量相同</li></ul><h2 id="脚本投稿" tabindex="-1"><a class="header-anchor" href="#脚本投稿" aria-hidden="true">#</a> 脚本投稿 🌟</h2><p>为了将脚本做的更加强大,评论区开放社区脚本投递,将强大脚本通过<strong>下方留言</strong> 的形式上报,让更多人使用你开发的脚本,同时如果使用者觉得社区开发者投递的脚本不错,请给该脚本 <mark>点赞</mark>,投票高且实用的脚本, 将有机会<mark>直接上墙到插件页面</mark>,从而让你的主页获得更高的关注度🔥</p><ul><li>格式</li></ul><div class="language-groovy" data-ext="groovy"><pre class="language-groovy"><code><span class="token comment">/**
 * 作者:Kings
 * 主页:https://github.com/kings1990
 * 功能:xxxxx
 */</span>

<span class="token comment">//脚本内容</span>
<span class="token punctuation">....</span>
</code></pre></div><p><img src="`+d+'" alt="scriptDonate" loading="lazy"></p>',8);function sn(an,tn){const e=p("ExternalLinkIcon"),c=p("FlowChart"),t=p("Badge");return u(),r("div",null,[h,n("p",null,[g,s(": "),n("a",m,[s("Groovy"),a(e)])]),v,_,a(c,{id:"flowchart-12",code:"eNorLrG1Ky5JLCqxUggGUVz5BYa2dpl5BaUl+aUlQNJK4Wln7/O96160zHo2Zw1Q2giooTSpCCibmZdqpeCSr1CUWliaWgzSamxrl1+QWpRYkpmfB9Q4oQ+hMdXWLjUvxUrBNS+Fq7hEIym/pCQ/V1MXqN5QoygzPaMEzDZCYhvr2qVyAQDOaT9G",preset:"vue"}),b,n("p",null,[n("a",f,[s("https://github.com/kings1990/fast-request-samples"),a(e)])]),y,n("p",null,[s("插件底层采用"),n("a",x,[s("hutool"),a(e)]),s("的"),q,s("来实现请求的发送")]),n("h3",U,[w,s(" request "),a(t,{text:"2022.2.3️",type:"tip"})]),S,j,n("h3",H,[R,s(" response "),a(t,{text:"2022.2.3️",type:"tip"})]),C,N,n("h3",B,[D,s(" rfr "),a(t,{text:"2022.2.3️",type:"tip"})]),J,n("h4",L,[G,s(" rfr.projectHeader "),a(t,{text:"2022.2.3️",type:"tip"})]),E,n("h4",Q,[z,s(" rfr.moduleHeader "),a(t,{text:"2022.2.3️",type:"tip"})]),T,n("h4",V,[I,s(" rfr.currentProjectName "),a(t,{text:"2022.2.5️",type:"tip"})]),O,n("h4",F,[M,s(" rfr.currentEnvName "),a(t,{text:"2022.2.5️",type:"tip"})]),P,n("h2",W,[A,s(" Console "),a(t,{text:"2022.2.5",type:"tip"})]),K,n("div",Y,[Z,X,n("ul",null,[n("li",null,[a(t,{text:"注意最终脚本需要删除这行代码",type:"danger"})])]),$]),nn])}const cn=l(k,[["render",sn],["__file","script.html.vue"]]);export{cn as default};
